<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[POI2014]RAJ-Rally</title>
      <link href="/2019/04/01/POI2014-RAJ-Rally/"/>
      <url>/2019/04/01/POI2014-RAJ-Rally/</url>
      
        <content type="html"><![CDATA[<p>题目链接：<a href="https://www.luogu.org/problemnew/show/P3573" target="_blank" rel="noopener">传送门</a><br><a id="more"></a><br>找到一个点使删除这个点后图中的最长路最短<br>DAG——-&gt;拓扑<br>好吧第一步就挂掉了<br>标签线段树主席树？<br>好像线段树确实也能做<br>设$f[i]$表示到达$i$的最长路<br>$ff[i]$表示从$i$出发的最长路<br>一条最长路（起点$fr$,终点$ca$）一定等于 $f[fr]+ff[ca]+1$<br>所以做法就出来了<br>枚举每个点用一个堆来维护每个节点的贡献<br>可以删去和插入和询问最大值<br>记着最后把那个+1减掉<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @Date:   2019-04-01T16:39:57+08:00</span></span><br><span class="line"><span class="comment"> * @Last modified time: 2019-04-01T16:39:58+08:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> A 1000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 2010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> next, to;</span><br><span class="line">&#125;e[A];</span><br><span class="line"><span class="keyword">int</span> heads[A], num, headt[A];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> fr, <span class="keyword">int</span> to, <span class="keyword">int</span> head[])</span> </span>&#123;</span><br><span class="line">    e[++num].next = head[fr];</span><br><span class="line">    e[num].to = to;</span><br><span class="line">    head[fr] = num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heap</span> &#123;</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; ins, del;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;ins.push(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deletee</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;del.push(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (!del.empty() <span class="keyword">and</span> !ins.empty() <span class="keyword">and</span> del.top() == ins.top()) &#123;del.pop(); ins.pop();&#125;</span><br><span class="line">        <span class="keyword">return</span> ins.top();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;hp;</span><br><span class="line"><span class="keyword">int</span> n, m, a, b, in[A], tail, Q[A], f[A], ff[A], ans = <span class="number">0x3f3f3f3f</span>, pos;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">topo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!in[i]) q.push(i), Q[++tail] = i;</span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> fr = q.front(); q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = heads[fr]; i; i = e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> ca = e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (!--in[ca]) q.push(ca), Q[++tail] = ca;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        add(a, b, heads); add(b, a, headt);</span><br><span class="line">        in[b]++;</span><br><span class="line">    &#125;</span><br><span class="line">    topo();</span><br><span class="line">    fill(f + <span class="number">1</span>, f + n + <span class="number">1</span>, <span class="number">1</span>); <span class="comment">//到达i的最长路径</span></span><br><span class="line">    fill(ff + <span class="number">1</span>, ff + n + <span class="number">1</span>, <span class="number">1</span>); <span class="comment">//从i出发的最长路径</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">        <span class="keyword">int</span> fr = Q[j];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = heads[fr]; i; i = e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> ca = e[i].to;</span><br><span class="line">            f[ca] = max(f[ca], f[fr] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = n; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">        <span class="keyword">int</span> fr = Q[j];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = headt[fr]; i; i = e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> ca = e[i].to;</span><br><span class="line">            ff[ca] = max(ff[ca], ff[fr] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) hp.insert(ff[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">        <span class="keyword">int</span> fr = Q[j];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = headt[fr]; i; i = e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> ca = e[i].to;</span><br><span class="line">            hp.deletee(f[ca] + ff[fr]);</span><br><span class="line">        &#125;</span><br><span class="line">        hp.deletee(ff[fr]);</span><br><span class="line">        <span class="keyword">if</span> (ans &gt; hp.top() - <span class="number">1</span>) &#123;</span><br><span class="line">            ans = hp.top() - <span class="number">1</span>;</span><br><span class="line">            pos = fr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = heads[fr]; i; i = e[i].next) &#123;</span><br><span class="line">            <span class="keyword">int</span> ca = e[i].to;</span><br><span class="line">            hp.insert(f[fr] + ff[ca]);</span><br><span class="line">        &#125;</span><br><span class="line">        hp.insert(f[fr]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; pos &lt;&lt; <span class="string">" "</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 拓扑 </tag>
            
            <tag> Dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My first</title>
      <link href="/2019/04/01/My-first/"/>
      <url>/2019/04/01/My-first/</url>
      
        <content type="html"><![CDATA[<h2 id="markdown测试"><a href="#markdown测试" class="headerlink" title="markdown测试"></a>markdown测试</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; ins, del;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;ins.push(x);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deletee</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;del.push(x);&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!del.empty() <span class="keyword">and</span> !ins.empty() <span class="keyword">and</span> del.top() == ins.top()) &#123;del.pop(); ins.pop();&#125;</span><br><span class="line">    <span class="keyword">return</span> ins.top();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><a id="more"></a><p>$LaTeX$测试</p><script type="math/tex; mode=display">\sqrt{1+\sqrt[^p\!]{1+a^2}}</script><script type="math/tex; mode=display">\int_a^b f(x)\mathrm{d}x</script><script type="math/tex; mode=display">\left(\sum_{k=\frac{1}{2}}^{N^2}\frac{1}{k}\right)</script><script type="math/tex; mode=display">\mathbf{X} =\left( \begin{array}{ccc}x_{11} & x_{12} & \ldots \\x_{21} & x_{22} & \ldots \\\vdots & \vdots & \ddots\end{array} \right)</script><script type="math/tex; mode=display">y = \left\{ \begin{array}{ll}a & \textrm{if $d>c$}\\b+x & \textrm{in the morning}\\l & \textrm{all day long}\end{array} \right.</script>]]></content>
      
      
      
        <tags>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/01/hello-world/"/>
      <url>/2019/04/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
